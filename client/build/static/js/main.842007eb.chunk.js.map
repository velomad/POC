{"version":3,"sources":["components/Footer.js","components/Navbar.js","components/Breadcrum.js","components/Button.js","components/ExportCsv.js","Poc/CustomTable.js","hooks/useSearch.js","Pages/Grid.js","components/DropDown.js","components/InputField.js","demo-data/appointments.js","Poc/AppointmentScheduler.js","Pages/Scheduler.js","Routes.js","App.js","reportWebVitals.js","fonts/Montserrat-Regular.ttf","fonts/Montserrat-Bold.ttf","index.js"],"names":["Footer","className","Navbar","title","src","width","xmlns","fill","viewBox","stroke","d","Breadcrum","style","backgroundColor","Button","imageUrl","btnText","ExportCsv","csvData","fileName","onClick","e","wb","Sheets","data","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","type","Blob","FileSaver","exportToCSV","CustomTable","columns","rows","useState","row","setRow","value","setValue","console","log","searchValue","Object","values","searchKey","keys","filter","el","toLowerCase","includes","useSearch","filteredData","isReadOnly","setReadOnly","input","setInput","handleChange","idx","target","name","onRowChange","existingRow","length","test","find","id","assign","cancleOperation","onHandleSearch","map","col","index","placeholder","onChange","registrationNo","registrationDate","required","border","readOnly","patientName","defaultValue","lastVisitDate","mobileNo","dateOfBirth","handleEdit","color","Pagination","count","Grid","DropDown","label","options","InputField","appointments","startDate","Date","endDate","patientContactNumber","useStyles","makeStyles","theme","todayCell","fade","palette","primary","main","weekendCell","action","disabledBackground","today","weekend","icon","textCenter","textAlign","messages","moreInformationLabel","titleLabel","detailsLabel","repeatLabel","TimeTableCell","props","classes","date","getDay","onDoubleClick","undefined","DayScaleCell","BasicLayout","onFieldChange","appointmentData","restProps","Label","text","TextEditor","onValueChange","nextValue","Content","withStyles","children","container","alignItems","item","xs","Demo","React","setData","currentDate","setCurrentDate","changeAppointment","setChangeAppointment","AppointmentChanges","setAppointmentChanges","editingAppointment","setEditingAppointment","currentViewName","setCurrentViewName","ExternalViewSwitcher","RadioGroup","marginLeft","flexDirection","FormControlLabel","control","Radio","Paper","elevation","height","firstDayOfWeek","onCurrentDateChange","onCurrentViewNameChange","onCommitChanges","added","changed","deleted","startingAddedId","appointment","addedAppointment","onAddedAppointmentChange","appointmentChanges","onAppointmentChangesChange","onEditingAppointmentChange","preCommitChanges","alert","startDayHour","endDayHour","showAllDayTitle","cellDuration","displayName","timeTableCellComponent","dayScaleCellComponent","appointmentComponent","Appointment","ignoreCancel","showOpenButton","showDeleteButton","showCloseButton","contentComponent","basicLayoutComponent","textEditorComponent","Scheduler","Routes","pathName","setPathName","useEffect","window","location","pathname","exact","path","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.842007eb.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"flex justify-between px-4 footer py-3\">\r\n            <div className=\"text-white\">Ⓒ All Rights Reserved 2019.</div>\r\n            <div className=\"text-white\">Website Developed by SIS Healthcare Solutions</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from \"react\";\r\n\r\nconst Navbar = ({ title }) => {\r\n  return (\r\n    <div className=\"flex\">\r\n      <div className=\"px-20 py-3 bg-white flex items-center jsutify-center\">\r\n        <img\r\n          src=\"https://sakshiinfotech.com/DocVedaSEB/images/Login-Icons/DocVedaLogo-01.svg\"\r\n          width=\"180px\"\r\n        />\r\n      </div>\r\n      <div className=\"flex background-primary justify-between w-full px-10 items-center bg-blue-500\">\r\n        <div className=\"flex items-center space-x-4\">\r\n          <div>\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"h-6 w-6 text-white\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke=\"currentColor\"\r\n            >\r\n              <path\r\n                stroke-linecap=\"round\"\r\n                stroke-linejoin=\"round\"\r\n                stroke-width=\"2\"\r\n                d=\"M4 6h16M4 12h16M4 18h16\"\r\n              />\r\n            </svg>\r\n          </div>\r\n          <div>\r\n            <img\r\n              src=\"https://sakshiinfotech.com/DocVedaSEB/images/Clinic/Clinic.svg\"\r\n              width=\"50px\"\r\n            />\r\n          </div>\r\n          <div className=\"text-white text-lg\">{title}</div>\r\n        </div>\r\n        <div className=\"flex items-center space-x-4\">\r\n          <div>\r\n            <img\r\n              src=\"https://sakshiinfotech.com/DocVedaSEB/images/dashboard_inner_icons/Notifications-01.svg\"\r\n              width=\"25px\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <img\r\n              src=\"https://sakshiinfotech.com/DocVedaSEB/images/dashboard_inner_icons/User_icon-01.svg\"\r\n              width=\"50px\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <div className=\"flex items-center space-x-2 \">\r\n              <div className=\"text-white\">Rupesh D</div>\r\n              <div>\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  className=\"h-6 w-6 text-white\"\r\n                  fill=\"none\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  stroke=\"currentColor\"\r\n                >\r\n                  <path\r\n                    stroke-linecap=\"round\"\r\n                    stroke-linejoin=\"round\"\r\n                    stroke-width=\"2\"\r\n                    d=\"M19 9l-7 7-7-7\"\r\n                  />\r\n                </svg>\r\n              </div>\r\n            </div>\r\n            <div className=\"text-white text-xs\">Receptionist</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nconst Breadcrum = () => {\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"flex space-x-4 p-1\"\r\n        style={{ backgroundColor: \"#f5f5f5\" }}\r\n      >\r\n        <div className=\"underline cursor-pointer text-blue-500\">Front Desk</div>\r\n        <div>/</div>\r\n        <div>Patient Registration</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Breadcrum;\r\n","import React from \"react\";\r\n\r\nconst Button = ({ imageUrl, btnText }) => {\r\n  return (\r\n    <div className=\"flex cursor-pointer  border-gray-200 border-2 p-1 items-center space-x-2 bg-white\">\r\n      <div>\r\n        <img src={imageUrl} width=\"15px\" />\r\n      </div>\r\n      <div className=\"capitalize\">{btnText}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport * as FileSaver from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nexport const ExportCsv = ({ csvData, fileName }) => {\r\n  const fileType =\r\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n  const fileExtension = \".xlsx\";\r\n\r\n  const exportToCSV = (csvData, fileName) => {\r\n    const ws = XLSX.utils.json_to_sheet(csvData);\r\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\r\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n    const data = new Blob([excelBuffer], { type: fileType });\r\n    FileSaver.saveAs(data, fileName + fileExtension);\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className=\"btn btn-primary text-white\"\r\n      onClick={(e) => exportToCSV(csvData, fileName)}\r\n    >\r\n      Export\r\n    </button>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useSearch } from \"../hooks/useSearch\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport { ExportCsv } from \"../components/ExportCsv\";\r\n\r\nconst CustomTable = ({ columns, rows }) => {\r\n  const [row, setRow] = useState(rows);\r\n  const [value, setValue] = useState(null);\r\n  const [filteredData] = useSearch(row, value);\r\n  const [isReadOnly, setReadOnly] = useState(null);\r\n  const [input, setInput] = useState({});\r\n\r\n  const handleEdit = (row) => {\r\n    setReadOnly(row.id);\r\n    setInput(row);\r\n  };\r\n\r\n  console.log(\"==============>>>\", filteredData);\r\n\r\n  const handleChange = (e, idx) => {\r\n    const { name, value } = e.target;\r\n    setInput({ ...input, [name]: value });\r\n  };\r\n\r\n  const handleAddRow = () => {\r\n    setReadOnly(row.length + 1);\r\n    // setInput({});\r\n    setRow([\r\n      ...row,\r\n      {\r\n        id: row.length + 1,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  console.log(input);\r\n\r\n  const onRowChange = () => {\r\n    let existingRow = row[row.length - 1];\r\n    let test = [...row].find((el) => el.id == existingRow.id);\r\n\r\n    console.log(test);\r\n    const data = Object.assign(test, input);\r\n    console.log(row)\r\n    setRow([...row,data])\r\n  };\r\n\r\n  const cancleOperation = () => {\r\n    setReadOnly(null);\r\n    setInput({});\r\n  };\r\n\r\n  console.log(value);\r\n\r\n  const onHandleSearch = (e) => {\r\n    const { name, value } = e.target;\r\n    setValue({ [name]: value });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"py-4\">\r\n        <ExportCsv csvData={row} fileName=\"registeredPatients\" />\r\n      </div>\r\n      <form>\r\n        <div className=\"py-4\">\r\n          {/* <input\r\n            className=\"border-2 p-1 rounded-lg form form-control\"\r\n            placeholder=\"Search By Registration No.\"\r\n            type=\"search\"\r\n            value={value}\r\n            onChange={(e) => {\r\n              setValue(e.target.value);\r\n            }}\r\n            style={{\r\n              backgroundColor: \"#f6f7f9\",\r\n            }}\r\n          /> */}\r\n        </div>\r\n\r\n        <table className=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              {columns.map((col) => (\r\n                <th key={col.name} className=\"table-border\">\r\n                  {col.title}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n            <tr>\r\n              {columns.map((col, index) => (\r\n                <th>\r\n                  {index !== 0 && index !== columns.length - 1 && (\r\n                    <input\r\n                      name={col.name}\r\n                      className=\"border-2 p-1 rounded-lg form form-control\"\r\n                      placeholder={col.title}\r\n                      type=\"search\"\r\n                      // value={value[col.name]}\r\n                      onChange={onHandleSearch}\r\n                      style={{\r\n                        backgroundColor: \"#f6f7f9\",\r\n                      }}\r\n                    />\r\n                  )}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filteredData.map((row, index) => (\r\n              <tr className=\"table-border\" key={row.id}>\r\n                <td>{row.id}</td>\r\n                <td>{row.registrationNo}</td>\r\n                <td>\r\n                  <input\r\n                    value={\r\n                      row.id == isReadOnly\r\n                        ? input.registrationDate\r\n                        : row.registrationDate\r\n                    }\r\n                    className={row.id === isReadOnly && \"form form-control\"}\r\n                    onChange={(e) => handleChange(e, index)}\r\n                    name=\"registrationDate\"\r\n                    required=\"required\"\r\n                    style={{\r\n                      border: row.id !== isReadOnly && \"none\",\r\n                      backgroundColor: \"#f6f7f9\",\r\n                    }}\r\n                    type={row.id === isReadOnly ? \"date\" : \"text\"}\r\n                    readOnly={row.id === isReadOnly ? false : true}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    value={\r\n                      row.id == isReadOnly ? input.patientName : row.patientName\r\n                    }\r\n                    className={row.id === isReadOnly && \"form form-control\"}\r\n                    onChange={(e) => handleChange(e, index)}\r\n                    name=\"patientName\"\r\n                    style={{\r\n                      border: row.id !== isReadOnly && \"none\",\r\n                      backgroundColor: \"#f6f7f9\",\r\n                    }}\r\n                    type=\"text\"\r\n                    required={true}\r\n                    defaultValue={row.patientName}\r\n                    readOnly={row.id === isReadOnly ? false : true}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    value={\r\n                      row.id == isReadOnly\r\n                        ? input.lastVisitDate\r\n                        : row.lastVisitDate\r\n                    }\r\n                    className={row.id === isReadOnly && \"form form-control\"}\r\n                    onChange={(e) => handleChange(e, index)}\r\n                    name=\"lastVisitDate\"\r\n                    type={row.id === isReadOnly ? \"date\" : \"text\"}\r\n                    required\r\n                    style={{\r\n                      border: row.id !== isReadOnly && \"none\",\r\n                      backgroundColor: \"#f6f7f9\",\r\n                    }}\r\n                    type={row.id === isReadOnly ? \"date\" : \"text\"}\r\n                    defaultValue={row.lastVisitDate}\r\n                    readOnly={row.id === isReadOnly ? false : true}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    value={row.id == isReadOnly ? input.mobileNo : row.mobileNo}\r\n                    onChange={(e) => handleChange(e, index)}\r\n                    className={row.id === isReadOnly && \"form form-control\"}\r\n                    name=\"mobileNo\"\r\n                    style={{\r\n                      border: row.id !== isReadOnly && \"none\",\r\n                      backgroundColor: \"#f6f7f9\",\r\n                    }}\r\n                    defaultValue={row.mobileNo}\r\n                    readOnly={row.id === isReadOnly ? false : true}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    value={\r\n                      row.id == isReadOnly ? input.dateOfBirth : row.dateOfBirth\r\n                    }\r\n                    className={row.id === isReadOnly && \"form form-control\"}\r\n                    onChange={(e) => handleChange(e, index)}\r\n                    name=\"dateOfBirth\"\r\n                    style={{\r\n                      border: row.id !== isReadOnly && \"none\",\r\n                      backgroundColor: \"#f6f7f9\",\r\n                    }}\r\n                    type={row.id === isReadOnly ? \"date\" : \"text\"}\r\n                    defaultValue={row.dateOfBirth}\r\n                    readOnly={row.id === isReadOnly ? false : true}\r\n                  />\r\n                </td>\r\n                {/* <td className=\"text-center\">\r\n                <img src=\"/appointment.svg\" />\r\n              </td> */}\r\n                <td className=\"text-center \">\r\n                  {row.id !== isReadOnly ? (\r\n                    <div className=\"d-flex justify-content-around\">\r\n                      <div>\r\n                        <svg\r\n                          onClick={() => handleEdit(row)}\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                          className=\"cursor-pointer\"\r\n                          style={{ width: \"15px\", color: \"skyblue\" }}\r\n                          fill=\"none\"\r\n                          viewBox=\"0 0 24 24\"\r\n                          stroke=\"currentColor\"\r\n                        >\r\n                          <path\r\n                            stroke-linecap=\"round\"\r\n                            stroke-linejoin=\"round\"\r\n                            stroke-width=\"2\"\r\n                            d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"\r\n                          />\r\n                        </svg>\r\n                      </div>\r\n                      <div>\r\n                        <svg\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                          style={{ width: \"15px\", color: \"red\" }}\r\n                          fill=\"none\"\r\n                          viewBox=\"0 0 24 24\"\r\n                          stroke=\"currentColor\"\r\n                        >\r\n                          <path\r\n                            stroke-linecap=\"round\"\r\n                            stroke-linejoin=\"round\"\r\n                            stroke-width=\"2\"\r\n                            d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\r\n                          />\r\n                        </svg>\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"flex justify-around\">\r\n                      <div>\r\n                        <svg\r\n                          onClick={onRowChange}\r\n                          style={{ width: \"15px\", color: \"green\" }}\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                          fill=\"none\"\r\n                          viewBox=\"0 0 24 24\"\r\n                          stroke=\"currentColor\"\r\n                        >\r\n                          <path\r\n                            stroke-linecap=\"round\"\r\n                            stroke-linejoin=\"round\"\r\n                            stroke-width=\"2\"\r\n                            d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                          />\r\n                        </svg>\r\n                      </div>\r\n                      <div>\r\n                        <svg\r\n                          onClick={cancleOperation}\r\n                          style={{ width: \"15px\", color: \"gold\" }}\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                          fill=\"none\"\r\n                          viewBox=\"0 0 24 24\"\r\n                          stroke=\"currentColor\"\r\n                        >\r\n                          <path\r\n                            stroke-linecap=\"round\"\r\n                            stroke-linejoin=\"round\"\r\n                            stroke-width=\"2\"\r\n                            d=\"M6 18L18 6M6 6l12 12\"\r\n                          />\r\n                        </svg>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </form>\r\n\r\n      <div className=\"py-2 d-flex justify-content-center\">\r\n        <button className=\"btn btn-primary\" onClick={handleAddRow}>\r\n          Add More\r\n        </button>\r\n      </div>\r\n      <div className=\"d-flex justify-content-center\">\r\n        <Pagination count={10} color=\"standard\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomTable;\r\n","export const useSearch = (data, value) => {\r\n  console.log(data);\r\n  let filteredData;\r\n\r\n  if (!value) {\r\n    filteredData = data;\r\n    return [filteredData];\r\n  }\r\n\r\n  let searchValue = value && Object.values(value)[0];\r\n  let searchKey = value && Object.keys(value)[0];\r\n  filteredData = data.filter((el) => {\r\n    return el?.[searchKey].toLowerCase().includes(searchValue?.toLowerCase());\r\n  });\r\n\r\n  return [filteredData];\r\n};\r\n","import React from \"react\";\r\nimport Breadcrum from \"../components/Breadcrum\";\r\nimport Button from \"../components/Button\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport CustomTable from \"../Poc/CustomTable\";\r\n\r\nconst Grid = () => {\r\n  const columns = [\r\n    { name: \"id\", title: \"ID\" },\r\n    { name: \"registrationNo\", title: \"Registration No.\" },\r\n    { name: \"registrationDate\", title: \"Registration Date\" },\r\n    { name: \"patientName\", title: \"Patient Name\" },\r\n    { name: \"lastVisitDate\", title: \"Last Visit Date\" },\r\n    { name: \"mobileNo\", title: \"Mobile No.\" },\r\n    { name: \"dateOfBirth\", title: \"Date Of Birth\" },\r\n    // { name: \"scheduleAppointments\", title: \"Schedule Appointments\" },\r\n    { name: \"action\", title: \"Action\" },\r\n  ];\r\n\r\n  const rows = [\r\n    {\r\n      id: 1,\r\n      registrationNo: \"Rg/21041\",\r\n      registrationDate: \"03/02/2021\",\r\n      patientName: \"John\",\r\n      lastVisitDate: \"10/02/2021\",\r\n      mobileNo: \"7985444258\",\r\n      dateOfBirth: \"23/02/1985\",\r\n      // scheduleAppointments: \"Schedule\",\r\n    },\r\n    {\r\n      id: 2,\r\n      registrationNo: \"Rg/21042\",\r\n      registrationDate: \"03/03/2021\",\r\n      patientName: \"Wick\",\r\n      lastVisitDate: \"10/02/2021\",\r\n      mobileNo: \"6585457852\",\r\n      dateOfBirth: \"21/02/1985\",\r\n      // scheduleAppointments: \"Schedule\",\r\n    },\r\n    {\r\n      id: 3,\r\n      registrationNo: \"Rg/21043\",\r\n      registrationDate: \"12/02/2021\",\r\n      patientName: \"Rick\",\r\n      lastVisitDate: \"10/02/2021\",\r\n      mobileNo: \"6698785457\",\r\n      dateOfBirth: \"21/02/1985\",\r\n      // scheduleAppointments: \"Schedule\",\r\n    },\r\n    {\r\n      id: 4,\r\n      registrationNo: \"Rg/21046\",\r\n      registrationDate: \"03/02/2021\",\r\n      patientName: \"Click\",\r\n      lastVisitDate: \"22/02/2021\",\r\n      mobileNo: \"3366525458\",\r\n      dateOfBirth: \"21/02/1985\",\r\n      // scheduleAppointments: \"Schedule\",\r\n    },\r\n    {\r\n      id: 5,\r\n      registrationNo: \"Rg/21026\",\r\n      registrationDate: \"03/02/2021\",\r\n      patientName: \"Easy\",\r\n      lastVisitDate: \"25/02/2021\",\r\n      mobileNo: \"5899665877\",\r\n      dateOfBirth: \"21/02/1985\",\r\n      // scheduleAppointments: \"Schedule\",\r\n    },\r\n    {\r\n      id: 6,\r\n      registrationNo: \"Rg/21029\",\r\n      registrationDate: \"03/02/2021\",\r\n      patientName: \"Peasy\",\r\n      lastVisitDate: \"25/02/2021\",\r\n      mobileNo: \"3369852541\",\r\n      dateOfBirth: \"21/02/1985\",\r\n      // scheduleAppointments: \"Schedule\",\r\n    },\r\n    {\r\n      id: 7,\r\n      registrationNo: \"Rg/21015\",\r\n      registrationDate: \"03/02/2021\",\r\n      patientName: \"XYZ\",\r\n      lastVisitDate: \"1/03/2021\",\r\n      mobileNo: \"441147859\",\r\n      dateOfBirth: \"21/02/1985\",\r\n      // scheduleAppointments: \"Schedule\",\r\n    },\r\n    {\r\n      id: 8,\r\n      registrationNo: \"Rg/21015\",\r\n      registrationDate: \"03/02/2021\",\r\n      patientName: \"XYZ\",\r\n      lastVisitDate: \"1/03/2021\",\r\n      mobileNo: \"441147859\",\r\n      dateOfBirth: \"21/02/1985\",\r\n      // scheduleAppointments: \"Schedule\",\r\n    },\r\n    {\r\n      id: 9,\r\n      registrationNo: \"Rg/21015\",\r\n      registrationDate: \"03/02/2021\",\r\n      patientName: \"XYZ\",\r\n      lastVisitDate: \"1/03/2021\",\r\n      mobileNo: \"441147859\",\r\n      dateOfBirth: \"21/02/1985\",\r\n      // scheduleAppointments: \"Schedule\",\r\n    },\r\n    {\r\n      id: 10,\r\n      registrationNo: \"Rg/21015\",\r\n      registrationDate: \"03/02/2021\",\r\n      patientName: \"XYZ\",\r\n      lastVisitDate: \"1/03/2021\",\r\n      mobileNo: \"441147859\",\r\n      dateOfBirth: \"21/02/1985\",\r\n      // scheduleAppointments: \"Schedule\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"App \">\r\n      <div className=\"p-4 space-y-5\">\r\n        <div className=\"\">\r\n          <Breadcrum />\r\n        </div>\r\n\r\n        <div className=\"\">\r\n          <div className=\"shadow-md bg-white p-2\">\r\n            Application message are shown here...\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex space-x-1.5\">\r\n          <div className=\"inline-block\">\r\n            <Button\r\n              btnText=\"add\"\r\n              imageUrl=\"https://sakshiinfotech.com/DocVedaSEB/images/add.svg\"\r\n            />\r\n          </div>\r\n          <div className=\"inline-block\">\r\n            <Button\r\n              btnText=\"edit\"\r\n              imageUrl=\"https://sakshiinfotech.com/DocVedaSEB/images/Edit-01.svg\"\r\n            />\r\n          </div>\r\n          <div className=\"inline-block\">\r\n            <Button\r\n              btnText=\"View\"\r\n              imageUrl=\"https://sakshiinfotech.com/DocVedaSEB/images/Edit-01.svg\"\r\n            />\r\n          </div>\r\n          <div className=\"inline-block\">\r\n            <Button\r\n              btnText=\"save\"\r\n              imageUrl=\"https://sakshiinfotech.com/DocVedaSEB/images/Save-01.svg\"\r\n            />\r\n          </div>\r\n          <div className=\"inline-block\">\r\n            <Button\r\n              btnText=\"search\"\r\n              imageUrl=\"https://sakshiinfotech.com/DocVedaSEB/images/Search-01.svg\"\r\n            />\r\n          </div>\r\n          <div className=\"inline-block\">\r\n            <Button\r\n              btnText=\"reset\"\r\n              imageUrl=\"https://sakshiinfotech.com/DocVedaSEB/images/reset.svg\"\r\n            />\r\n          </div>\r\n          <div className=\"inline-block\">\r\n            <Button\r\n              btnText=\"cancel\"\r\n              imageUrl=\"https://sakshiinfotech.com/DocVedaSEB/images/Cancel-01.svg\"\r\n            />\r\n          </div>\r\n          <div className=\"inline-block\">\r\n            <Button\r\n              btnText=\"import from appointment\"\r\n              imageUrl=\"https://sakshiinfotech.com/DocVedaSEB/images/Save-01.svg\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <CustomTable columns={columns} rows={rows} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n","import React from \"react\";\r\n\r\nconst DropDown = ({ label, options }) => {\r\n  return (\r\n    <div className=\"space-y-1 \">\r\n      <div>\r\n        <label>{label}</label>\r\n      </div>\r\n      <select className=\"border-2 h-10 w-full p-1.5\">\r\n        {options.map((el, index) => (\r\n          <option key={index}>{el}</option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DropDown;\r\n","import React from \"react\";\r\n\r\nconst InputField = ({ label, type, placeholder }) => {\r\n  return (\r\n    <div className=\"space-y-1\">\r\n      <div>\r\n        <label className=\"capitalize\">{label}</label>\r\n      </div>\r\n      <input\r\n        className=\"border-2 w-full p-1.5 capitalize focus:outline-none\"\r\n        type={type}\r\n        placeholder={placeholder}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputField;\r\n","export const appointments = [\r\n    {\r\n      title: ' Rupesh Rao\t',\r\n      startDate: new Date(2021, 8, 6, 10, 30),\r\n      endDate: new Date(2021, 8, 6, 11, 0),\r\n      id: 0,\r\n      patientContactNumber:\"9989765278\"\r\n    }, {\r\n      title: 'Pradyot Rath',\r\n      startDate: new Date(2021, 7, 29, 12, 0),\r\n      endDate: new Date(2021, 7, 29, 12, 30),\r\n      id: 1,\r\n      patientContactNumber:\"8789165678\"\r\n\r\n    }, {\r\n      title: 'Vanzara',\r\n      startDate: new Date(2021, 8, 6, 9, 30),\r\n      endDate: new Date(2021, 8, 1, 10, 0),\r\n      id: 2,\r\n      patientContactNumber:\"8889705678\"\r\n\r\n    }, {\r\n      title: 'Vanzara',\r\n      startDate: new Date(2021, 8, 2, 13, 0),\r\n      endDate: new Date(2021, 8, 2, 13, 30),\r\n      id: 3,\r\n      patientContactNumber:\"7789765678\"\r\n\r\n    }, {\r\n      title: 'Pradyot Rath',\r\n      startDate: new Date(2021, 6, 1, 12, 0),\r\n      endDate: new Date(2021, 6, 1, 12, 30),\r\n      id: 4,\r\n      patientContactNumber:\"9789705678\"\r\n\r\n    }, {\r\n      title: ' Ajay',\r\n      startDate: new Date(2021, 8, 3, 11, 0),\r\n      endDate: new Date(2021, 8, 3, 11, 30),\r\n      id: 18,\r\n      patientContactNumber:\"6789745678\"\r\n\r\n    }, {\r\n      title: 'Pradyot Rath',\r\n      startDate: new Date(2021, 8, 4, 12, 0),\r\n      endDate: new Date(2021, 8, 4, 12, 30),\r\n      id: 6,\r\n      patientContactNumber:\"9789765278\"\r\n\r\n    }, {\r\n      title: ' Ajay',\r\n      startDate: new Date(2021, 7, 29, 13, 0),\r\n      endDate: new Date(2021, 7, 29, 13, 30),\r\n      id: 7,\r\n      patientContactNumber:\"8789765178\"\r\n\r\n    }]","import * as React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { ViewState, EditingState } from \"@devexpress/dx-react-scheduler\";\r\nimport ContactPhone from \"@material-ui/icons/ContactPhone\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n// import './css/bootstrap.min.css'\r\n// import './css/font-awesome.css'\r\n// import './css/bootstrap-glyphicons.css'\r\n\r\nimport {\r\n  DateNavigator,\r\n  Toolbar,\r\n  TodayButton,\r\n} from \"@devexpress/dx-react-scheduler-material-ui\";\r\n\r\nimport {\r\n  Scheduler,\r\n  Appointments,\r\n  AppointmentForm,\r\n  AppointmentTooltip,\r\n  WeekView,\r\n  EditRecurrenceMenu,\r\n  ConfirmationDialog,\r\n  MonthView,\r\n  ViewSwitcher,\r\n  DragDropProvider,\r\n} from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { appointments } from \"../demo-data/appointments\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  todayCell: {\r\n    backgroundColor: fade(theme.palette.primary.main, 0.1),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.14),\r\n    },\r\n    \"&:focus\": {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.16),\r\n    },\r\n  },\r\n  weekendCell: {\r\n    backgroundColor: fade(theme.palette.action.disabledBackground, 0.04),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.action.disabledBackground, 0.04),\r\n    },\r\n    \"&:focus\": {\r\n      backgroundColor: fade(theme.palette.action.disabledBackground, 0.04),\r\n    },\r\n  },\r\n  today: {\r\n    backgroundColor: fade(theme.palette.primary.main, 0.16),\r\n  },\r\n  weekend: {\r\n    backgroundColor: fade(theme.palette.action.disabledBackground, 0.06),\r\n  },\r\n}));\r\nconst style = () => ({\r\n  icon: {\r\n    color: \"#878f99\",\r\n  },\r\n  textCenter: {\r\n    textAlign: \"center\",\r\n  },\r\n  todayCell: {\r\n    backgroundColor: \"red\",\r\n  },\r\n  weekendCell: {\r\n    backgroundColor: \"grey\",\r\n  },\r\n});\r\n\r\nconst messages = {\r\n  moreInformationLabel: \"\",\r\n  titleLabel: \"Enter Name\",\r\n  detailsLabel: \"Patient Name \",\r\n  repeatLabel: \"\",\r\n};\r\n\r\nconst TimeTableCell = (props) => {\r\n  const classes = useStyles();\r\n  const { startDate } = props;\r\n  const date = new Date(startDate);\r\n\r\n  // if (date.getDate() === new Date().getDate()) {\r\n  //   return <WeekView.TimeTableCell className={classes.todayCell}  {...props} />;\r\n  // }\r\n  if (date.getDay() === 0 || date.getDay() === 6) {\r\n    return (\r\n      <WeekView.TimeTableCell\r\n        {...props}\r\n        className={classes.weekendCell}\r\n        onDoubleClick={undefined}\r\n      />\r\n    );\r\n  }\r\n  return <WeekView.TimeTableCell {...props} />;\r\n};\r\n\r\nconst DayScaleCell = (props) => {\r\n  const classes = style();\r\n  const { startDate, today } = props;\r\n\r\n  // if (today) {\r\n  //   return <WeekView.DayScaleCell {...props} className={classes.today} />;\r\n  // }\r\n  if (startDate.getDay() === 0 || startDate.getDay() === 6) {\r\n    return (\r\n      <WeekView.DayScaleCell\r\n        {...props}\r\n        className={classes.weekend}\r\n        onDoubleClick={undefined}\r\n      />\r\n    );\r\n  }\r\n  return <WeekView.DayScaleCell {...props} />;\r\n};\r\n\r\nconst BasicLayout = ({ onFieldChange, appointmentData, ...restProps }) => {\r\n  const onCustomFieldChange = (nextValue) => {\r\n    onFieldChange({ patientContactNumber: nextValue });\r\n  };\r\n\r\n  return (\r\n    <AppointmentForm.BasicLayout\r\n      appointmentData={appointmentData}\r\n      onFieldChange={onFieldChange}\r\n      {...restProps}\r\n    >\r\n      <AppointmentForm.Label text=\"Patient contact number\" type=\"title\" />\r\n      <AppointmentForm.TextEditor\r\n        value={appointmentData.patientContactNumber}\r\n        onValueChange={onCustomFieldChange}\r\n        placeholder=\"Enter contact number\"\r\n      />\r\n    </AppointmentForm.BasicLayout>\r\n  );\r\n};\r\n\r\nconst TextEditor = (props) => {\r\n  if (props.type === \"multilineTextEditor\") {\r\n    return null;\r\n  }\r\n  return <AppointmentForm.TextEditor {...props} />;\r\n};\r\n\r\nconst Content = withStyles(style, { name: \"Content\" })(\r\n  ({ children, appointmentData, classes, ...restProps }) => (\r\n    <AppointmentTooltip.Content\r\n      {...restProps}\r\n      appointmentData={appointmentData}\r\n    >\r\n      <Grid container alignItems=\"center\">\r\n        <Grid item xs={2} className={classes.textCenter}>\r\n          <ContactPhone className={classes.icon} />\r\n        </Grid>\r\n        <Grid item xs={10}>\r\n          <span>{appointmentData.patientContactNumber}</span>\r\n        </Grid>\r\n      </Grid>\r\n    </AppointmentTooltip.Content>\r\n  )\r\n);\r\n\r\n//  appointments = appointment => ({\r\n//   id: appointment.id,\r\n//   startDate: appointment.startDate,\r\n//   // endDate: usaTime(appointment.end.dateTime),\r\n//   // title: appointment.summary,\r\n// });\r\nexport default function Demo() {\r\n  const [data, setData] = React.useState(appointments);\r\n  const [currentDate, setCurrentDate] = React.useState(new Date());\r\n  const [changeAppointment, setChangeAppointment] = React.useState(\"\");\r\n  const [AppointmentChanges, setAppointmentChanges] = React.useState(\"\");\r\n  const [editingAppointment, setEditingAppointment] = React.useState(undefined);\r\n  const [visibleForm, setVisibleForm] = React.useState(true);\r\n  const [disableAppointmentOnHoliday, setDisableAppointmentOnHoliday] =\r\n    React.useState(false);\r\n  const [currentViewName, setCurrentViewName] = React.useState(\"Week\");\r\n\r\n  // const disableAppointmentOnHoliday = (restProps) => {\r\n  //   console.log(restProps);\r\n  //   setVisibleForm(false);\r\n  // };\r\n\r\n  const ExternalViewSwitcher = ({ currentViewName, onChange, style }) => (\r\n    <RadioGroup\r\n      aria-label=\"Views\"\r\n      name=\"views\"\r\n      value={currentViewName}\r\n      onChange={onChange}\r\n      style={{ marginLeft: \"20px\", flexDirection: \"row\" }}\r\n    >\r\n      <FormControlLabel value=\"Week\" control={<Radio />} label=\"Weekly View\" />\r\n      {/* <FormControlLabel value=\"Work Week\" control={<Radio />} label=\"Work Week\" /> */}\r\n      <FormControlLabel\r\n        value=\"Month\"\r\n        control={<Radio />}\r\n        label=\"Monthly View\"\r\n      />\r\n    </RadioGroup>\r\n  );\r\n\r\n  const Appointment = ({ children, style, ...restProps }) => (\r\n    <Appointments.Appointment\r\n      // onDoubleClick={() => disableAppointmentOnHoliday({ ...restProps })}\r\n      {...restProps}\r\n      style={{\r\n        ...style,\r\n        backgroundColor: \"#64B5FC\",\r\n      }}\r\n    >\r\n      {children}\r\n    </Appointments.Appointment>\r\n  );\r\n\r\n  const currentViewNameChanges = (e) => {\r\n    setCurrentViewName(e.target.value);\r\n  };\r\n\r\n  const currentViewNameChange = (currentViewName) => {\r\n    setCurrentViewName(currentViewName);\r\n  };\r\n\r\n  const currentDateChange = (currentDate) => {\r\n    setCurrentDate(currentDate);\r\n  };\r\n  const changeAddedAppointment = (addedAppointment) => {\r\n    setChangeAppointment(addedAppointment);\r\n  };\r\n  const changeAppointmentChanges = (appointmentChanges) => {\r\n    setAppointmentChanges(appointmentChanges);\r\n  };\r\n\r\n  const changeEditingAppointment = (editingAppointment) => {\r\n    setEditingAppointment(editingAppointment);\r\n  };\r\n\r\n  const preCommitChanges = ({ added, changed, deleted }) => {\r\n    alert(\"test\");\r\n  };\r\n\r\n  const commitChanges = ({ added, changed, deleted }) => {\r\n    //To add new data\r\n    if (added) {\r\n      const startingAddedId =\r\n        data.length > 0 ? data[data.length - 1].id + 1 : 0;\r\n      setData([...data, { id: startingAddedId, ...added }]);\r\n    }\r\n    //Update the current data\r\n    if (changed) {\r\n      setData(\r\n        data.map((appointment) =>\r\n          changed[appointment.id]\r\n            ? { ...appointment, ...changed[appointment.id] }\r\n            : appointment\r\n        )\r\n      );\r\n    }\r\n    if (deleted !== undefined) {\r\n      setData(data.filter((appointment) => appointment.id !== deleted));\r\n    }\r\n    return data;\r\n  };\r\n\r\n  return (\r\n    // <Container\r\n    //   // fixed\r\n    //   // className=\"scrollable\"\r\n    //   // style={{\r\n    //   //   position: \"absolute\",\r\n    //   //   top: \"50%\",\r\n    //   //   left: \"50%\",\r\n    //   //   transform: \"translate(-50%,-50%)\",\r\n    //   // }}\r\n    // >\r\n\r\n    <div>\r\n      <Paper elevation={3}>\r\n        <React.Fragment>\r\n          <ExternalViewSwitcher\r\n            currentViewName={currentViewName}\r\n            onChange={currentViewNameChanges}\r\n          />\r\n          <Scheduler\r\n            data={data}\r\n            height={560}\r\n            setCurrentDate={currentDate}\r\n            firstDayOfWeek={currentDate.getDay()}\r\n          >\r\n            <ViewState\r\n              currentDate={currentDate}\r\n              onCurrentDateChange={currentDateChange}\r\n              currentViewName={currentViewName}\r\n              onCurrentViewNameChange={currentViewNameChange}\r\n            />\r\n            <EditingState\r\n              onCommitChanges={commitChanges}\r\n              addedAppointment={changeAppointment}\r\n              onAddedAppointmentChange={changeAddedAppointment}\r\n              appointmentChanges={AppointmentChanges}\r\n              onAppointmentChangesChange={changeAppointmentChanges}\r\n              editingAppointment={editingAppointment}\r\n              onEditingAppointmentChange={changeEditingAppointment}\r\n              preCommitChanges={preCommitChanges}\r\n            />\r\n            <WeekView\r\n              startDayHour={9}\r\n              endDayHour={19}\r\n              showAllDayTitle={false}\r\n              cellDuration={15}\r\n              // excludedDays={[0]}\r\n              displayName={\"Weekly View\"}\r\n              timeTableCellComponent={TimeTableCell}\r\n              dayScaleCellComponent={DayScaleCell}\r\n            />\r\n\r\n            <MonthView displayName={\"Monthly View\"} />\r\n            <Appointments appointmentComponent={Appointment} />\r\n\r\n            <Toolbar />\r\n            <DateNavigator />\r\n\r\n            <ViewSwitcher />\r\n            <EditRecurrenceMenu />\r\n            <ConfirmationDialog ignoreCancel={true} />\r\n            <DragDropProvider />\r\n\r\n            <AppointmentTooltip\r\n              showOpenButton\r\n              showDeleteButton\r\n              showCloseButton\r\n              contentComponent={Content}\r\n            />\r\n            <TodayButton />\r\n            <AppointmentForm\r\n              // commandButtonComponent={OnSbumitComponent}\r\n              basicLayoutComponent={BasicLayout}\r\n              textEditorComponent={TextEditor} //Add new textbox\r\n              messages={messages}\r\n            />\r\n          </Scheduler>\r\n        </React.Fragment>\r\n      </Paper>\r\n    </div>\r\n    // </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Breadcrum from \"../components/Breadcrum\";\r\nimport Button from \"../components/Button\";\r\nimport DropDown from \"../components/DropDown\";\r\nimport InputField from \"../components/InputField\";\r\nimport AppointmentScheduler from \"../Poc/AppointmentScheduler\";\r\n\r\nconst Scheduler = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"p-4 space-y-5\">\r\n        <div className=\"\">\r\n          <Breadcrum />\r\n        </div>\r\n\r\n        <div className=\"\">\r\n          <div className=\"shadow-md bg-white p-2 fff\">\r\n            Application message are shown here..\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex space-x-1.5\">\r\n          <div className=\"inline-block\">\r\n            <Button\r\n              btnText=\"add\"\r\n              imageUrl=\"https://sakshiinfotech.com/DocVedaSEB/images/add.svg\"\r\n            />\r\n          </div>\r\n          <div className=\"inline-block\">\r\n            <Button\r\n              btnText=\"edit\"\r\n              imageUrl=\"https://sakshiinfotech.com/DocVedaSEB/images/Edit-01.svg\"\r\n            />\r\n          </div>\r\n          <div className=\"inline-block\">\r\n            <Button\r\n              btnText=\"View\"\r\n              imageUrl=\"https://sakshiinfotech.com/DocVedaSEB/images/Edit-01.svg\"\r\n            />\r\n          </div>\r\n          <div className=\"inline-block\">\r\n            <Button\r\n              btnText=\"save\"\r\n              imageUrl=\"https://sakshiinfotech.com/DocVedaSEB/images/Save-01.svg\"\r\n            />\r\n          </div>\r\n          <div className=\"inline-block\">\r\n            <Button\r\n              btnText=\"search\"\r\n              imageUrl=\"https://sakshiinfotech.com/DocVedaSEB/images/Search-01.svg\"\r\n            />\r\n          </div>\r\n          <div className=\"inline-block\">\r\n            <Button\r\n              btnText=\"reset\"\r\n              imageUrl=\"https://sakshiinfotech.com/DocVedaSEB/images/reset.svg\"\r\n            />\r\n          </div>\r\n          <div className=\"inline-block\">\r\n            <Button\r\n              btnText=\"cancel\"\r\n              imageUrl=\"https://sakshiinfotech.com/DocVedaSEB/images/Cancel-01.svg\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"shadow-md bg-white p-2\">\r\n          <div>\r\n            <div className=\"font-primary font-bold\">Patient Information</div>\r\n            <div className=\"grid grid-cols-6 py-4\">\r\n              <div>Registartion No. : Rg/21043</div>\r\n              <div>Patient Name : Rupesh Tiwari</div>\r\n              <div>Date of Birth : 21/02/1985</div>\r\n              <div>Age : 38 Year</div>\r\n              <div>Gender : Male</div>\r\n              <div>Mobile No. : 9485221445</div>\r\n            </div>\r\n            <div className=\"grid grid-cols-6 py-4\">\r\n              <div>\r\n                <div>Email ID :</div>\r\n                <div>rupeshtiwari@gmail.com</div>\r\n              </div>\r\n              <div className=\"col-span-2\">\r\n                <div>address:</div>{\" \"}\r\n                <div>\r\n                  322, 3rd floor Vajreshwari APT, J.B.Nagar, Andheri East\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <div>City :</div>\r\n                <div>Mumbai</div>\r\n              </div>\r\n              <div>\r\n                <div>Pin Code :</div>\r\n                <div>400 093</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <div className=\"font-primary font-bold\">Schedule Appointment</div>\r\n            <div className=\"py-4 grid grid-cols-4 gap-6\">\r\n              <div>\r\n                <InputField\r\n                  label=\"Appointment Date\"\r\n                  type=\"date\"\r\n                  placeholder=\"10/1/2021\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <InputField\r\n                  label=\"Appointment Mobile No.\"\r\n                  type=\"number\"\r\n                  placeholder=\"9958896658\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <InputField\r\n                  label=\"Appointment Email ID\"\r\n                  type=\"email\"\r\n                  placeholder=\"rupeshtiwari@gmail.com\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <DropDown label=\"source\" options={[\"walk-in\", \"on phone\"]} />\r\n              </div>\r\n            </div>\r\n            <div className=\"py-4 grid grid-cols-4 gap-6\">\r\n              <div>\r\n                <DropDown label=\"Clinic Branch\" options={[\"Khar\", \"Bandra\"]} />\r\n              </div>\r\n              <div>\r\n                <DropDown\r\n                  label=\"Specialisation\"\r\n                  options={[\"opthalmolgy\", \"ENT\"]}\r\n                />\r\n              </div>\r\n              <div>\r\n                <DropDown\r\n                  label=\"Doctor name\"\r\n                  options={[\"Rupesh 1\", \"Rupesh 2\", \"Rupesh 3\"]}\r\n                />\r\n              </div>\r\n              <div>\r\n                <InputField\r\n                  label=\"Referring Doctor / Organization :\"\r\n                  type=\"text\"\r\n                  placeholder=\"Dr ravi\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <AppointmentScheduler />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scheduler;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Footer from \"./components/Footer\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Grid from \"./Pages/Grid\";\r\nimport Scheduler from \"./Pages/Scheduler\";\r\n\r\nconst Routes = () => {\r\n  const [pathName, setPathName] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setPathName(window.location.pathname);\r\n  }, [window.location.pathname]);\r\n\r\n  return (\r\n    <div>\r\n      <BrowserRouter>\r\n        <Navbar\r\n          title={\r\n            pathName === \"/\" ? \"Schedule Appointment\" : \"Patient Registration\"\r\n          }\r\n        />\r\n        <Switch>\r\n          <Route exact=\"/\" path=\"/\" component={Scheduler} />\r\n          <Route path=\"/grid\" component={Grid} />\r\n        </Switch>\r\n        <Footer />\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from \"react\";\nimport Routes from \"./Routes\";\n\nfunction App() {\n  return (\n    <div>\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/Montserrat-Regular.b8fa52d7.ttf\";","export default __webpack_public_path__ + \"static/media/Montserrat-Bold.41ea63fc.ttf\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './fonts/Montserrat-Regular.ttf'\nimport './fonts/Montserrat-Bold.ttf'\nimport \"../node_modules/bootstrap/dist/js/bootstrap.bundle\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}